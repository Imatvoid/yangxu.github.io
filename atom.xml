<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Imatvoid&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-12T16:08:39.771Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yangxu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>887. Super Egg Drop(鸡蛋掉落)</title>
    <link href="http://yoursite.com/2019/05/11/leetcode/887.%20Super%20Egg%20Drop/"/>
    <id>http://yoursite.com/2019/05/11/leetcode/887. Super Egg Drop/</id>
    <published>2019-05-11T13:22:06.000Z</published>
    <updated>2019-05-12T16:08:39.771Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Desc&quot;&gt;&lt;a href=&quot;#Desc&quot; class=&quot;headerlink&quot; title=&quot;Desc&quot;&gt;&lt;/a&gt;Desc&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/super-egg-drop/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;desc&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;你将获得 &lt;code&gt;K&lt;/code&gt; 个鸡蛋，并可以使用一栋从 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;N&lt;/code&gt;  共有 &lt;code&gt;N&lt;/code&gt; 层楼的建筑。&lt;/p&gt;
&lt;p&gt;每个蛋的功能都是一样的，如果一个蛋碎了，你就不能再把它掉下去。&lt;/p&gt;
&lt;p&gt;你知道存在楼层 &lt;code&gt;F&lt;/code&gt; ，满足 &lt;code&gt;0 &amp;lt;= F &amp;lt;= N&lt;/code&gt; 任何从高于 &lt;code&gt;F&lt;/code&gt; 的楼层落下的鸡蛋都会碎，从 &lt;code&gt;F&lt;/code&gt; 楼层或比它低的楼层落下的鸡蛋都不会破。&lt;/p&gt;
&lt;p&gt;每次&lt;em&gt;移动&lt;/em&gt;，你可以取一个鸡蛋（如果你有完整的鸡蛋）并把它从任一楼层 &lt;code&gt;X&lt;/code&gt; 扔下（满足 &lt;code&gt;1 &amp;lt;= X &amp;lt;= N&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;你的目标是&lt;strong&gt;确切地&lt;/strong&gt;知道 &lt;code&gt;F&lt;/code&gt; 的值是多少。&lt;/p&gt;
&lt;p&gt;无论 &lt;code&gt;F&lt;/code&gt; 的初始值如何，你确定 &lt;code&gt;F&lt;/code&gt; 的值的最小移动次数是多少？&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode-Hard" scheme="http://yoursite.com/tags/LeetCode-Hard/"/>
    
      <category term="LeetCode-DP" scheme="http://yoursite.com/tags/LeetCode-DP/"/>
    
  </entry>
  
  <entry>
    <title>解析Ubuntu 16.04 安装nvidia驱动 各种错误</title>
    <link href="http://yoursite.com/2019/02/17/%E8%A7%A3%E6%9E%90Ubuntu-16-04-%E5%AE%89%E8%A3%85nvidia%E9%A9%B1%E5%8A%A8-%E5%90%84%E7%A7%8D%E9%94%99%E8%AF%AF/"/>
    <id>http://yoursite.com/2019/02/17/解析Ubuntu-16-04-安装nvidia驱动-各种错误/</id>
    <published>2019-02-17T10:23:43.000Z</published>
    <updated>2019-02-17T13:07:08.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.geforce.com/sites/default/files-world/attachments/GTX-980_970-1280x720-Wallpaper-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://yoursite.com/categories/AI/"/>
    
      <category term="环境配置" scheme="http://yoursite.com/categories/AI/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="人工智能" scheme="http://yoursite.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="nvidia" scheme="http://yoursite.com/tags/nvidia/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>sleep()和wait()方法与对象锁、锁池、等待池</title>
    <link href="http://yoursite.com/2017/01/17/sleep-%E5%92%8Cwait-%E6%96%B9%E6%B3%95%E4%B8%8E%E5%AF%B9%E8%B1%A1%E9%94%81%E3%80%81%E9%94%81%E6%B1%A0%E3%80%81%E7%AD%89%E5%BE%85%E6%B1%A0/"/>
    <id>http://yoursite.com/2017/01/17/sleep-和wait-方法与对象锁、锁池、等待池/</id>
    <published>2017-01-17T10:28:04.000Z</published>
    <updated>2019-02-17T13:13:28.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一道Java的题目:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于sleep()和wait()，以下描述错误的一项是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A sleep是线程类（Thread）的方法，wait是Object类的方法；&lt;/li&gt;
&lt;li&gt;B sleep不释放对象锁，wait放弃对象锁&lt;/li&gt;
&lt;li&gt;C sleep暂停线程、但监控状态仍然保持，结束后会自动恢复&lt;/li&gt;
&lt;li&gt;D wait后进入等待锁定池，只有针对此对象发出notify方法后获得对象锁进入运行状态&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="java" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="并发" scheme="http://yoursite.com/tags/%E5%B9%B6%E5%8F%91/"/>
    
      <category term="锁" scheme="http://yoursite.com/tags/%E9%94%81/"/>
    
  </entry>
  
</feed>
